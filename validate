#!/usr/bin/env python3
# Copyright (C) 2023 Reece H. Dunn. SPDX-License-Identifier: Apache-2.0

import argparse
import sys
import os

from validator import conllutil
from validator.logger import error_count

from validator.mwt import validate_mwt_tokens
from validator.pos import PosTagValidator
from validator.sentence import validate_sentence_text


def validate_conllu(filename, default_language, validator):
    language = default_language
    for sent in conllutil.parse_conllu(filename):
        if 'newdoc' in sent.metadata or 'newdoc id' in sent.metadata:
            language = sent.metadata.get('dc:language', default_language).split('-')[0]
        validator(sent, language)


def validate_files(filename, default_language, validator):
    if filename.endswith('.lst'):
        dirname = os.path.dirname(filename)
        for file in conllutil.parse_filelist(filename):
            conllu_filename = os.path.join(dirname, file)
            validate_conllu(conllu_filename, default_language, validator)
    else:
        validate_conllu(filename, default_language, validator)


validators = {
    'sentence-text': validate_sentence_text,
    'pos-tags': lambda sent, language: PosTagValidator(language).validate_sentence(sent),
    'mwt-tokens': validate_mwt_tokens,
}


def build_argparse():
    parser = argparse.ArgumentParser()
    parser.add_argument('input',
                        help='The CoNLL-U file to validate.')

    parser.add_argument('--language', default='und', type=str,
                        help='The language to use for the document if none is specified in the metadata.')
    parser.add_argument('--validator', default='sentence-text', type=str,
                        help='The validation tests to run.')

    return parser


def main():
    args = build_argparse().parse_args()
    validate_files(args.input,
                   default_language=args.language,
                   validator=validators[args.validator])
    if error_count > 0:
        sys.exit(1)


if __name__ == '__main__':
    main()
